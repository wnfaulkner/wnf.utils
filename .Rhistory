use_git()
getwd()
library(devtools)
library(roxygen2)
document()
?IsError
getwd()
install("wnf.utils")
setwd("C:/Users/WNF/Documents/GIT PROJECTS/GIT_2020-12-WNF-Utils-Package/")
install("wnf.utils")
?IsError
library(wnf.utils)
?IsError
getwd()
setwd('C:/Users/WNF/Documents/GIT PROJECTS/GIT_2020-12-WNF-Utils-Package/wnf.utils')
document()
setwd('C:/Users/WNF/Documents/GIT PROJECTS/GIT_2020-12-WNF-Utils-Package')
install('wnf.utils')
library(wnf.utils)
x<-2
x+1
x+a
IsError(x)
load_all()
setwd("C:/Users/WNF/Documents/GIT PROJECTS/GIT_2020-12-WNF-Utils-Package/wnf.utils")
load_all()
IsError(x)
x
use_mit_license("William Faulkner")
document()
devtools::load_all(".")
IsError(x)
devtools::load_all(".")
IsError(x)
document()
IsError(x)
devtools::document()
getwd
getwd()
IsError()
devtools::document()
install('wnf.utils')
setwd("C:/Users/WNF/Documents/GIT PROJECTS/GIT_2020-12-WNF-Utils-Package/")
install('wnf.utils')
library(wnf.utils)
x<-1
x
IsError(x)
wnf.utils::IsError(x)
wnf.utils
getwd()
install("utils.wnf")
install("wnf.utils")
getwd()
library("devtools")
library(roxygen2)
document()
install(wnf.utils)
setwd('..')
getwd()
install(wnf.utils)
install("wnf.utils")
?IsError
x
x<-1
IsError(x)
x
IsError("x")
IsError("x + 1")
IsError("x + a")
IsError(x+1)
IsError(x*99)
IsError(x*a)
getwd()
setwd("./wnf.utils")
list.files
list.files()
setwd("./R")
getwd()
setwd("..")
document
document()
setwd("..")
install("wnf.utils")
?IsError
getwd()
devtools::load_all("wnf.utils")
IsError(x)
IsError(x+1)
?IsError
document
document()
load_all()
devtools::load_all("wnf.utils")
?LoadCommonPackages
?MostRecentlyModifiedFilename
library(wnf.utils)
?MostRecentlyModifiedFilename
?LoadCommonPackages
?IsError
getwd()
MostRecentlyModifiedFilename()
list.files()
setwd("./wnf.utils")
list.files()
setwd("./R")
list.files()
MostRecentlyModifiedFilename(title.string.match = "a", file.type = "r", dir = getwd())
check()
?grepl
?tolower
?sapply
library(wnf.utils)
?MostRecentlyModifiedFilename
getwd()
setwd("C:/Users/WNF/Desktop")
list.files()
MostRecentlyModifiedFilename(title.string.match = "r", file.type = "xlsx", dir = getwd())
library(wnf.utils)
getwd()
list.files()
MostRecentlyModifiedFilename(title.string.match = "r", file.type = "xlsx", dir = getwd())
x<-MostRecentlyModifiedFilename(title.string.match = "r", file.type = "xlsx", dir = getwd())
x
library(wnf.utils)
tibble(c("a","b","2"))
x<-tibble(c("a","b","2"))
x
UnlistVector(x)
document()
getwd()
setwd("C:\Users\WNF\Documents\GIT PROJECTS\GIT_2020-12-WNF-Utils-Package\wnf.utils")
setwd("C:\\Users\\WNF\\Documents\\GIT PROJECTS\\GIT_2020-12-WNF-Utils-Package\\wnf.utils")
document()
library(wnf.utils)
?UnlistVector
x<-tibble(c("a","b","2"))
UnlistVector(x)
library(wnf.utils)
?MostRecentlyModifiedFilename
getwd()
setwd("C:/Users/WNF/Desktop")
list.files()
MostRecentlyModifiedFilename(title.string.match = "r", "xlsx", dir = getwd())
installed.packages()
library(magrittr)
installed.packages() %>% as.tibble
installed.packages() %>% as.data.frame()
installed.packages() %>% tail
installed.packages() %>% as.data.frame()
x<-installed.packages() %>% as.data.frame()
x
x %>% names
x$Package
x$Package %>% unique()
x$Package %>% unique() %>% .[order(.)]
wnf.utils::MostRecentlyModifiedFilename(title.string.match = "r", file.type = "xlsx", dir = "C:/Users/WNF/Desktop/")
getwd()
setwd("C:\Users\WNF\Documents\GIT PROJECTS\GIT_2020-12-WNF-Utils-Package\wnf.utils")
setwd("C:\\Users\\WNF\\Documents\\GIT PROJECTS\\GIT_2020-12-WNF-Utils-Package\\wnf.utils")
document()
library(devtools)
library(roxygen2)
document()
devtools::load_all(".")
x<-c("abbddsags","sdgsfdab","x","eiwieba","bab")
NumSubstringMatches(x)
NumSubstringMatches(pattern = "ab", vector = x)
devtools::load_all(".")
NumSubstringMatches(pattern = "ab", vector = x)
SubstrRight(x = "greajiogerajoibsefadnkljbfdgaslknmbafdoijvfbdesaoij", n = 4)
getwd()
document()
devtools::load_all(".")
x<- c("and then there was light","andand lightlightand","andand","ghost")
x
Proper(x)
FirstLetterCap_MultElements(x)
ReplaceRepeatingSubstringWithSingleSubstring(x, "and")
library(tidyverse)
?tibble
document()
document()
devtools::load_all(".")
ReplaceRepeatingSubstringWithSingleSubstring(x, "and")
x
document()
library(devtools)
document()
library(roxygen2)
document()
document()
document()
document()
790927
library(devtools)
library(roxygen2)
getwd()
build()
document()
install('wnf.utils')
setwd('..')
getwd()
install('wnf.utils')
library(devtools)
library(roxygen2)
build()
install("C:/Users/WNF/Documents/GIT PROJECTS/wnf.utils_0.0.0.9000.tar.gz")
install("C:\Users\WNF\Documents\GIT PROJECTS\wnf.utils_0.0.0.9000.tar.gz")
setwd("C:/Users/WNF/Documents/GIT PROJECTS/")
install()
list.files()
install("wnf.utils_0.")
install("wnf.utils_0.0.0.9000.tar.gz")
setwd("C:/Users/WNF/Desktop")
list.files()
setwd("./wnf.utils")
list.files()
install()
install(wnf.utils_0.0.0.9000.tar.gz)
list.files()
install(wnf.utils_0.0.0.9000.tar.gz, repos = NULL, type = ''source'')
install(wnf.utils_0.0.0.9000.tar.gz, repos = NULL, type = "source")
install('wnf.utils_0.0.0.9000.tar.gz', repos = NULL, type = "source")
setwd(C:/Users/WNF/Documents/GIT PROJECTS/wnf.utils)
setwd("C:/Users/WNF/Documents/GIT PROJECTS/wnf.utils")
install("wnf.utils")
setwd('..')
getwd()
install('wnf.utils')
gregexpr( substring, as.character(string))
gregexpr(substring, as.character(string)) %>%
unlist %>%
length
install('wnf.utils')
install('wnf.utils')
install('wnf.utils')
install('wnf.utils')
install('wnf.utils')
install('wnf.utils')
max.num.replace <- NumSubstringMatches(substring, string)
document()
library(roxygen2)
document()
getwd()
setwd('./wnf.utils')
getwd()
document()
setwd('..')
install()
install('wnf.utils')
tb<-tibble(a=c(1,2,3,4,54,5,45), b=c(0,NA,2,3,4,4,542))
tb<-data.frame(a=c(1,2,3,4,54,5,45), b=c(0,NA,2,3,4,4,542))
library(dplyr)
tb<-tibble(a=c(1,2,3,4,54,5,45), b=c(0,NA,2,3,4,4,542))
tb
varnames = "b"
varnames
if(any(!(varnames %in% names(tb)))){
stop(paste0("varnames '", varnames[!(varnames %in% names(tb))], "' missing from table names."))
}
result <-
cbind(
tb %>% dplyr::select(varnames),
tb[,!(names(tb) %in% varnames)]
) %>% as_tibble()
resutl
result
